# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.audit.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.frontend.FrontendModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.frontend.filters.FrontendFilters"

# Custom error handler
play.http.errorHandler = "config.AmlsErrorHandler"

appName = "amls-frontend"
play.http.router = prod.Routes

play.filters.headers.contentSecurityPolicy = "default-src 'self' 'unsafe-inline' localhost:9250 localhost:9032 assets.digital.cabinet-office.gov.uk http://localhost:12345 www.googletagmanager.com https://www.google-analytics.com https://fonts.googleapis.com https://ssl.gstatic.com https://www.gstatic.com https://fonts.gstatic.com https://fonts.googleapis.com *.optimizely.com optimizely.s3.amazonaws.com data:"
play.modules.enabled += "modules.Module"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

play.filters.csrf.header.bypassHeaders {
  X-Requested-With = "*"
  Csrf-Token = "nocheck"
}

play.http.filters = play.api.http.EnabledFilters

play.filters.enabled = [
  play.filters.headers.SecurityHeadersFilter,
  com.kenshoo.play.metrics.MetricsFilter,
  uk.gov.hmrc.play.bootstrap.frontend.filters.HeadersFilter,
  uk.gov.hmrc.play.bootstrap.frontend.filters.crypto.SessionCookieCryptoFilter,
  uk.gov.hmrc.play.bootstrap.frontend.filters.deviceid.DeviceIdFilter,
  uk.gov.hmrc.play.bootstrap.filters.LoggingFilter,
  uk.gov.hmrc.play.bootstrap.filters.AuditFilter,
  uk.gov.hmrc.play.bootstrap.frontend.filters.SessionTimeoutFilter,
  play.filters.csrf.CSRFFilter,
  uk.gov.hmrc.play.bootstrap.filters.CacheControlFilter,
  uk.gov.hmrc.play.bootstrap.filters.MDCFilter
]

#for Business Customer Frontend keystore data
review-details.cache = "business-customer-frontend"

#encryption key for cache
json.encryption {
  key = "fqpLDZ4smuDsekHkeEBlCA=="
  previousKeys = []
}

timeout.seconds = 1800
timeout.countdown = 180 // maximum value that can be used for this flag is 1800
session.timeoutSeconds = 1800

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = false
}

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = true
    }
  }
}

assets {
  minified = true
  version = "3.11.0"
  url = "http://localhost:9032/assets/"
}

# Enable / Disable filters on controllers
controllers {
  # assets controller
  controllers.Assets {
    needsAuth = false
    needsAuditing = false
    needsLogging = false
  }
  uk.gov.hmrc.play.health.AdminController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
}

mongodb {
  uri = "mongodb://localhost:27017/amls-frontend"
}

appCache {
  mongo {
    enabled = true
    encryptionEnabled = false
  }

  expiryInSeconds = 2419200
}

microservice {
  services {
    paymentsUrl = "//"${microservice.services.payments-frontend.host}":"${microservice.services.payments-frontend.port}"/pay-online/other-taxes"

    feature-toggle {
      refresh-profile = false
      enrolment-store = true
      fx-enabled = true
      accessibility-statement = true
    }
    amls {
      host = localhost
      port = 8940
    }
    amls-notification {
      host = localhost
      port = 8942
    }
    amls-stub {
      host = localhost
      port = 8941
      get-file-url = "/anti-money-laundering/saveforlater/getfile/"
    }
    amls-frontend {
      public {
        host: "localhost:9222"
        secure: false
      }
    }
    contact-frontend {
      host = localhost
      port = 9250
      protocol = http
      beta-feedback-url {
        authenticated = ${microservice.services.contact-frontend.protocol}"://"${microservice.services.contact-frontend.host}":"${microservice.services.contact-frontend.port}"/contact/beta-feedback"
        unauthenticated = ${microservice.services.contact-frontend.protocol}"://"${microservice.services.contact-frontend.host}":"${microservice.services.contact-frontend.port}"/contact/beta-feedback-unauthenticated"
      }
      report-problem-url {
        with-js = ${microservice.services.contact-frontend.protocol}"://"${microservice.services.contact-frontend.host}":"${microservice.services.contact-frontend.port}"/contact/problem_reports_ajax?service=AMLS"
        non-js = ${microservice.services.contact-frontend.protocol}"://"${microservice.services.contact-frontend.host}":"${microservice.services.contact-frontend.port}"/contact/problem_reports_nonjs?service=AMLS"
      }
    }
    business-customer {
      host = localhost
      port = 9923
      url = "http://localhost:9923/business-customer/amls"
    }
    auth {
      host = localhost
      port = 8500
    }
    test-only {
      host = localhost
      port = 8941
      enabled = true
      get-base-url="/anti-money-laundering/test-only"
    }
    enrolment-stubs {
      host = localhost
      port = 8941
      enabled = true
    }
    government-gateway {
      host = localhost
      port = 8570
    }
    government-gateway-authentication {
      host = localhost
      port = 9987
    }
    tax-enrolments {
      host = localhost
      port = 9995
    }
    pay-api {
      host = localhost
      port = 9057
    }
    payments-frontend {
      host = localhost
      port = 9050
      custom-payment-id = "1234567890"
    }
    amls-art-market-participant-frontend {
      protocol = http
      host = localhost
      port = 9223
      appName: "anti-money-laundering/art-market-participant"
      url: ${microservice.services.amls-art-market-participant-frontend.protocol}"://"${microservice.services.amls-art-market-participant-frontend.host}":"${microservice.services.amls-art-market-participant-frontend.port}"/"${microservice.services.amls-art-market-participant-frontend.appName}
    }
    amls-estate-agency-business-frontend {
      protocol = http
      host = localhost
      port = 9224
      appName: "anti-money-laundering/estate-agency-business"
      url: ${microservice.services.amls-estate-agency-business-frontend.protocol}"://"${microservice.services.amls-estate-agency-business-frontend.host}":"${microservice.services.amls-estate-agency-business-frontend.port}"/"${microservice.services.amls-estate-agency-business-frontend.appName}
      redress-url: ${microservice.services.amls-estate-agency-business-frontend.protocol}"://"${microservice.services.amls-estate-agency-business-frontend.host}":"${microservice.services.amls-estate-agency-business-frontend.port}"/"${microservice.services.amls-estate-agency-business-frontend.appName}
    }
    cachable {
      session-cache {
        host = localhost

        port = 8400
        domain = keystore
        review-details.cache = "business-customer-frontend"
        amls-frontend.cache = "amls-frontend"
      }
    }

    login.url = "http://localhost:9553/bas-gateway/sign-in"
    login.continue = "http://localhost:9222/anti-money-laundering"
    logout.url = "http://localhost:9553/bas-gateway/sign-out-without-state"
  }
}

accessibility-statement {
  service-path = "/anti-money-laundering"
}

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = "localhost"
      port = 8100
    }
  }
}

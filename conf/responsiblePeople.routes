GET         /add                                                   @controllers.responsiblepeople.ResponsiblePeopleAddController.get(displayGuidance:Boolean ?= true, flow: Option[String] ?= None)

GET         /who-must-register/:index/                             @controllers.responsiblepeople.WhoMustRegisterController.get(index:Int, flow: Option[String] ?= None)
GET         /what-you-need/:index/                                 @controllers.responsiblepeople.WhatYouNeedController.get(index:Int, flow: Option[String] ?= None)

GET         /name/:index/                                          @controllers.responsiblepeople.PersonNameController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /name/:index/                                          @controllers.responsiblepeople.PersonNameController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /previous-name/:index/                                 @controllers.responsiblepeople.LegalNameInputController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /previous-name/:index/                                 @controllers.responsiblepeople.LegalNameInputController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /legal-name-change/:index/                             @controllers.responsiblepeople.LegalNameController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /legal-name-change/:index/                             @controllers.responsiblepeople.LegalNameController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /name-change-date/:index/                              @controllers.responsiblepeople.LegalNameChangeDateController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /name-change-date/:index/                              @controllers.responsiblepeople.LegalNameChangeDateController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /other-names/:index/                                   @controllers.responsiblepeople.KnownByController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /other-names/:index/                                   @controllers.responsiblepeople.KnownByController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /self-assessment/:index/                               @controllers.responsiblepeople.RegisteredForSelfAssessmentController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /self-assessment/:index/                               @controllers.responsiblepeople.RegisteredForSelfAssessmentController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /moved-address/:index/                                 @controllers.responsiblepeople.MovedAddressController.get(index: Int)
POST        /moved-address/:index/                                 @controllers.responsiblepeople.MovedAddressController.post(index: Int)

GET         /residency/:index/                                     @controllers.responsiblepeople.PersonResidentTypeController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /residency/:index/                                     @controllers.responsiblepeople.PersonResidentTypeController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /uk-passport/:index/                                   @controllers.responsiblepeople.PersonUKPassportController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /uk-passport/:index/                                   @controllers.responsiblepeople.PersonUKPassportController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /non-uk-passport/:index/                               @controllers.responsiblepeople.PersonNonUKPassportController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /non-uk-passport/:index/                               @controllers.responsiblepeople.PersonNonUKPassportController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /date-of-birth/:index/                                 @controllers.responsiblepeople.DateOfBirthController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /date-of-birth/:index/                                 @controllers.responsiblepeople.DateOfBirthController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /nationality/:index/                                   @controllers.responsiblepeople.NationalityController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /nationality/:index/                                   @controllers.responsiblepeople.NationalityController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /check-your-answers/:index/                            @controllers.responsiblepeople.DetailedAnswersController.get(index: Int, flow: Option[String] ?= None)
POST        /check-your-answers/:index/                            @controllers.responsiblepeople.DetailedAnswersController.post(index: Int, flow: Option[String] ?= None)

GET         /address-new/:index/                                   @controllers.responsiblepeople.NewHomeAddressController.get(index:Int)
POST        /address-new/:index/                                   @controllers.responsiblepeople.NewHomeAddressController.post(index:Int)

GET         /date-change-moved/:index/                             @controllers.responsiblepeople.NewHomeAddressDateOfChangeController.get(index:Int)
POST        /date-change-moved/:index/                             @controllers.responsiblepeople.NewHomeAddressDateOfChangeController.post(index:Int)

GET         /role-business/:index/                                 @controllers.responsiblepeople.PositionWithinBusinessController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /role-business/:index/                                 @controllers.responsiblepeople.PositionWithinBusinessController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /when-role-started/:index/                             @controllers.responsiblepeople.PositionWithinBusinessStartDateController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /when-role-started/:index/                             @controllers.responsiblepeople.PositionWithinBusinessStartDateController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /sole-proprietor-of-another-business/:index/           @controllers.responsiblepeople.SoleProprietorOfAnotherBusinessController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /sole-proprietor-of-another-business/:index/           @controllers.responsiblepeople.SoleProprietorOfAnotherBusinessController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /vat-registered-for-another-business/:index/           @controllers.responsiblepeople.VATRegisteredController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /vat-registered-for-another-business/:index/           @controllers.responsiblepeople.VATRegisteredController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /experience-training/:index/                           @controllers.responsiblepeople.ExperienceTrainingController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /experience-training/:index/                           @controllers.responsiblepeople.ExperienceTrainingController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /training/:index/                                      @controllers.responsiblepeople.TrainingController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /training/:index/                                      @controllers.responsiblepeople.TrainingController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /fit-and-proper-notice/:index/                         @controllers.responsiblepeople.FitAndProperNoticeController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /fit-and-proper/:index/                                @controllers.responsiblepeople.FitAndProperController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /fit-and-proper/:index/                                @controllers.responsiblepeople.FitAndProperController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /approval-check/:index/                                @controllers.responsiblepeople.ApprovalCheckController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /approval-check/:index/                                @controllers.responsiblepeople.ApprovalCheckController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /contact-details/:index/                               @controllers.responsiblepeople.ContactDetailsController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /contact-details/:index/                               @controllers.responsiblepeople.ContactDetailsController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /remove/:index/                                        @controllers.responsiblepeople.RemoveResponsiblePersonController.get(index: Int, flow: Option[String] ?= None)
POST        /remove/:index/                                        @controllers.responsiblepeople.RemoveResponsiblePersonController.remove(index: Int, flow: Option[String] ?= None)

GET         /country-of-birth/:index/                              @controllers.responsiblepeople.CountryOfBirthController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /country-of-birth/:index/                              @controllers.responsiblepeople.CountryOfBirthController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /your-responsible-people                               @controllers.responsiblepeople.YourResponsiblePeopleController.get()

GET         /address-country/:index/                               @controllers.responsiblepeople.address.CurrentAddressController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /address-country/:index/                               @controllers.responsiblepeople.address.CurrentAddressController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /address-uk/:index/                                    @controllers.responsiblepeople.address.CurrentAddressUKController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /address-uk/:index/                                    @controllers.responsiblepeople.address.CurrentAddressUKController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /address-non-uk/:index/                                @controllers.responsiblepeople.address.CurrentAddressNonUKController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /address-non-uk/:index/                                @controllers.responsiblepeople.address.CurrentAddressNonUKController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /address/:index/date-change                          @controllers.responsiblepeople.address.CurrentAddressDateOfChangeController.get(index:Int, edit: Boolean ?= false)
POST        /address/:index/date-change                          @controllers.responsiblepeople.address.CurrentAddressDateOfChangeController.post(index:Int, edit: Boolean ?= false)

GET         /previous-address-country/:index/                      @controllers.responsiblepeople.address.AdditionalAddressController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /previous-address-country/:index/                      @controllers.responsiblepeople.address.AdditionalAddressController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /previous-address-uk/:index/                           @controllers.responsiblepeople.address.AdditionalAddressUKController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /previous-address-uk/:index/                           @controllers.responsiblepeople.address.AdditionalAddressUKController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /previous-address-non-uk/:index/                       @controllers.responsiblepeople.address.AdditionalAddressNonUKController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /previous-address-non-uk/:index/                       @controllers.responsiblepeople.address.AdditionalAddressNonUKController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /other-previous-address-country/:index/                @controllers.responsiblepeople.address.AdditionalExtraAddressController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /other-previous-address-country/:index/                @controllers.responsiblepeople.address.AdditionalExtraAddressController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /other-previous-address-uk/:index/                     @controllers.responsiblepeople.address.AdditionalExtraAddressUKController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /other-previous-address-uk/:index/                     @controllers.responsiblepeople.address.AdditionalExtraAddressUKController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /other-previous-address-non-uk/:index/                 @controllers.responsiblepeople.address.AdditionalExtraAddressNonUKController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /other-previous-address-non-uk/:index/                 @controllers.responsiblepeople.address.AdditionalExtraAddressNonUKController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /time-at-address/:index/                             @controllers.responsiblepeople.address.TimeAtCurrentAddressController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /time-at-address/:index/                             @controllers.responsiblepeople.address.TimeAtCurrentAddressController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /time-at-previous-address/:index/                    @controllers.responsiblepeople.address.TimeAtAdditionalAddressController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /time-at-previous-address/:index/                    @controllers.responsiblepeople.address.TimeAtAdditionalAddressController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)

GET         /time-at-other-previous-address/:index/              @controllers.responsiblepeople.address.TimeAtAdditionalExtraAddressController.get(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
POST        /time-at-other-previous-address/:index/              @controllers.responsiblepeople.address.TimeAtAdditionalExtraAddressController.post(index:Int, edit: Boolean ?= false, flow: Option[String] ?= None)
